@page "/"
@inject ISiteRepository _siteRepository
@inject IArticleRepository _articleRepository
@inject ITopicRepository _topicRepository

<section id="topic-selector card content">

    <EditForm Model="@formModel" OnValidSubmit="HandleValidSubmit">
        <div class="form-group">
            <InputText id="name" @bind-Value="formModel.SearchText" />
        </div>

        <fieldset class="form-group col col-12">
            <legend>Choose your interests</legend>
            <div class="row">
                @foreach (var topic in GetTopics())
                {
                    <label for="@topic" class="paper-check col col-2">
                        <input type="checkbox" value="@topic" name="paperChecks" id="@topic"
                               checked="@(formModel.SelectedTopics.Contains(topic))" @onchange="eventArgs => { CheckboxClicked(topic); }" />
                        <span>@topic</span>
                    </label>
                }
            </div>
        </fieldset>

        <div class="form-group">
            <label for="pageSize">Number of results</label>
            <select id="pageSize" @bind="formModel.PageSize">
                @foreach (var size in PageSizes)
                {
                    <option value="@size">@size</option>
                }
            </select>
        </div>
        <button type="submit">Submit</button>

    </EditForm>

</section>

<div class="row flex-spaces tabs">
    <input id="tab1" type="radio" name="tabs" checked>
    <label for="tab1">Blogs</label>

    <input id="tab2" type="radio" name="tabs">
    <label for="tab2">Articles</label>


    <div class="content" id="content1">
        <SitesList Sites="sites"></SitesList>
    </div>
    <div class="content" id="content2">
        <ArticlesList Articles="articles"></ArticlesList>
    </div>
</div>

@code{

    private FormModel formModel = new FormModel();
    private List<Site> sites = new List<Site>();
    private List<Article> articles = new List<Article>();


    private void HandleValidSubmit()
    {
        var searchInfo = new SearchInfo { PageSize = formModel.PageSize, Topics = formModel.SelectedTopics.ToArray() };
        sites = _siteRepository.GetSites(searchInfo).GetAwaiter().GetResult().ToList();
        articles = _articleRepository.GetArticles(searchInfo).GetAwaiter().GetResult().ToList();
    }


    private void CheckboxClicked(string topic)
    {
        formModel.ToggleSelectedTopic(topic);

    }

    private int[] PageSizes = new[] { 10, 20, 50 };

    public List<string> GetTopics() => _topicRepository.GetAvailableTopics().GetAwaiter().GetResult().ToList();
}